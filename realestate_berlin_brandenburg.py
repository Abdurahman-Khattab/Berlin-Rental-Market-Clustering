# -*- coding: utf-8 -*-
"""realestate  Berlin Brandenburg

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZusdzTMXbFEhVU01qFYsvFo6HYoeNRem

Load SQL extension and create DB
"""

# Commented out IPython magic to ensure Python compatibility.
!pip install ipython-sql openpyxl
# %load_ext sql
# %sql sqlite:///berlin_housing.db
from google.colab import files
uploaded = files.upload()

import pandas as pd
from sqlalchemy import create_engine

# Correct sheet name with capital B
df_berlin = pd.read_excel("news-zensus-2022-miete.xlsx",
                          sheet_name="Berlin",
                          skiprows=5)

# Drop the numbering column (2nd column)
df_berlin = df_berlin.drop(df_berlin.columns[1], axis=1)

# Rename for SQL compatibility
df_berlin.columns = [
    "Stadtteil",
    "vor_1950",
    "bis_1969",
    "bis_1989",
    "bis_2009",
    "ab_2010"
]

# Show result
df_berlin.head()

"""Python Code (normalize Excel sheets → one DataFrame)"""

import pandas as pd

file_path = "news-zensus-2022-miete.xlsx"

def clean_sheet(sheet_name):
    # use 5th row as header
    df = pd.read_excel(file_path, sheet_name=sheet_name, header=4)

    # consistent renaming dictionary
    rename_map = {
        0: "stadtteil",
        1: "id",
        2: "miete_vor_1950",
        3: "miete_1950_1969",
        4: "miete_1970_1989",
        5: "miete_1990_2009",
        6: "miete_2010_plus"
    }

    # apply renaming only for columns that exist
    df = df.rename(columns={df.columns[i]: rename_map[i] for i in range(len(df.columns)) if i in rename_map})

    # add source tag
    df["source_sheet"] = sheet_name

    # drop junk rows (NaN or repeated "Stadtteil")
    df = df[df["stadtteil"].notna() & (df["stadtteil"] != "Stadtteil")]

    # convert rent columns to numeric (replace commas with dots first)
    rent_cols = ["miete_vor_1950", "miete_1950_1969", "miete_1970_1989", "miete_1990_2009", "miete_2010_plus"]
    for col in rent_cols:
        if col in df.columns:  # make sure it exists
            df[col] = (
                df[col]
                .astype(str)
                .str.replace(",", ".", regex=False)  # German → English decimal
                .str.replace("-", "", regex=False)   # remove dashes (missing data)
            )
            df[col] = pd.to_numeric(df[col], errors="coerce")

    return df

# combine all sheets
all_sheets = pd.ExcelFile(file_path).sheet_names
dfs = [clean_sheet(s) for s in all_sheets]
combined_df = pd.concat(dfs, ignore_index=True)

print(combined_df.head())

combined_df.to_csv("berlin_rents_clean.csv", index=False)

print(combined_df.describe())

rent_means = combined_df[[
    "miete_vor_1950", "miete_1950_1969",
    "miete_1970_1989", "miete_1990_2009",
    "miete_2010_plus"
]].mean()
print(rent_means)

"""Boxplot by construction period"""

import matplotlib.pyplot as plt

plt.figure(figsize=(10,6))
combined_df[[
    "miete_vor_1950", "miete_1950_1969",
    "miete_1970_1989", "miete_1990_2009",
    "miete_2010_plus"
]].boxplot()

plt.ylabel("Net Cold Rent (€/m²)", fontsize=12)
plt.title("Berlin Rent Levels by Building Age", fontsize=14)
plt.xticks(
    ticks=[1,2,3,4,5],
    labels=["Pre-1950", "1950–1969", "1970–1989", "1990–2009", "2010+"],
    fontsize=11
)
plt.yticks(fontsize=10)
plt.grid(axis="y", linestyle="--", alpha=0.7)
plt.show()

"""Trend Plot: How rents rise with newer buildings (average per period)"""

rent_means = combined_df[[
    "miete_vor_1950", "miete_1950_1969",
    "miete_1970_1989", "miete_1990_2009",
    "miete_2010_plus"
]].mean()

plt.figure(figsize=(8,5))
rent_means.plot(kind="line", marker="o", linewidth=2, color="royalblue")

plt.title("Average Rent by Building Age in Berlin", fontsize=14)
plt.ylabel("Net Cold Rent (€/m²)", fontsize=12)
plt.xlabel("Construction Period", fontsize=12)
plt.xticks(
    ticks=range(5),
    labels=["Pre-1950", "1950–1969", "1970–1989", "1990–2009", "2010+"],
    fontsize=11
)
plt.grid(True, linestyle="--", alpha=0.6)
plt.show()

"""Heatmap: District vs Rent Period"""

import seaborn as sns

plt.figure(figsize=(12,6))
sns.heatmap(
    combined_df.set_index("stadtteil")[[
        "miete_vor_1950", "miete_1950_1969",
        "miete_1970_1989", "miete_1990_2009",
        "miete_2010_plus"
    ]],
    cmap="YlOrRd", annot=False, linewidths=0.5
)

plt.title("Berlin Rent Levels by District and Building Age", fontsize=14)
plt.xlabel("Construction Period", fontsize=12)
plt.ylabel("District", fontsize=12)
plt.show()